version: '3.9'

services:
  backend:
    build: .
    ports:
      - "9091:8000"
    depends_on:
      mongo:
        condition: service_started
      mysql:
        condition: service_started
      neo4j:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://mongo:27055
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=admin
      - MYSQL_DB=res_toxval_v96_2
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=scanalyze123
    networks:
      - app-network

  mongo:
    image: mongo
    container_name: scanalyze_mongo
    command: mongod --port 27055
    ports:
      - "27055:27055"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  mysql:
    image: mysql:8
    container_name: toxval_mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_DATABASE=res_toxval_v96_2
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  neo4j:
    image: neo4j:5.11.0
    container_name: scanalyze_neo4j
    ports:
      - "7474:7474" # HTTP port (browser)
      - "7687:7687" # Bolt port (driver)
    volumes:
      - ./data/neo4j/data:/data
      - ./data/neo4j/logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/scanalyze123
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u $NEO4J_USER -p $NEO4J_PASSWORD 'RETURN 1' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 20s
    networks:
      - app-network

volumes:
  mongo_data:
  mysql_data:

networks:
  app-network:
    driver: bridge